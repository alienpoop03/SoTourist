
Sto sviluppando il progetto SoTourist con frontend in Angular + Ionic (mobile-first) e backend in Express con file JSON locale (`db.json`) come database simulato.

Tutte le password sono gestite lato backend e cifrate con `bcrypt`.

API disponibili lato backend:

- `POST /api/auth/register` → Registra un utente (username, email, password, tipo)
- `POST /api/auth/login` → Login con email + password, restituisce userId
- `GET /api/users/:userId/itineraries?filter=...` → Ottiene gli itinerari dell’utente (`filter = all | current | upcoming | future | past`)
- `POST /api/users/:userId/itineraries` → Crea un itinerario per un utente (senza itineraryId, viene generato)
- `DELETE /api/users/:userId/itineraries/:itineraryId` → Elimina un itinerario
- `GET /api/itineraries?city=...` → Ottiene tutti gli itinerari creati da altri utenti per una città
- `GET /api/itineraries/:itineraryId` → Ottiene un itinerario specifico (cercando tra tutti gli utenti)

Ogni utente è così strutturato:
```json
{
  "userId": "user_...",
  "username": "gabry",
  "email": "gabry@example.com",
  "password": "hash",
  "type": "standard",
  "itineraries": [ ... ]
}
```

Ogni itinerario contiene:
```json
{
  "itineraryId": "trip_...",
  "city": "Roma",
  "accommodation": "Hotel Centro",
  "startDate": "2025-07-01",
  "endDate": "2025-07-05",
  "style": "culturale",
  "coverPhoto": "...",
  "places": [
    {
      "placeId": "place_...",
      "name": "Colosseo",
      "day": 1,
      "timeSlot": "morning"
    }
  ]
}
```

Quando lavoriamo sul frontend, dobbiamo usare queste API per tutte le operazioni.
