Funzionamento della Logica dell'Itinerario e dei Posti in SoTourist
Nel progetto SoTourist, la gestione degli itinerari e dei posti avviene attraverso un backend che si occupa di salvare i dati su un database SQLite. Di seguito è spiegato il funzionamento della logica e delle interazioni tra frontend e backend.

1. Creazione di un Itinerario
Dati iniziali: Quando un utente crea un itinerario, inserisce la città, le date di inizio e fine, l'alloggio, e lo stile del viaggio.

Dati dell'itinerario: Questi dati vengono inviati al backend, che li salva nella tabella itineraries del database. La tabella contiene informazioni come:

itineraryId: un identificatore unico dell'itinerario.

userId: identificatore dell'utente che ha creato l'itinerario.

city: la città scelta per la vacanza.

accommodation: l'alloggio scelto.

startDate e endDate: le date di inizio e fine dell'itinerario.

style: lo stile del viaggio (ad esempio, culturale, rilassante, ecc.).

coverPhoto: una foto di copertura dell'itinerario.

2. Aggiunta di Posti all'Itinerario
Posti o tappe: Ogni itinerario può contenere diverse tappe o posti, che rappresentano i luoghi da visitare durante la vacanza.

Informazioni sui posti: Ogni posto è salvato in una tabella places e contiene:

placeId: un identificatore unico per il posto.

itineraryId: l'id dell'itinerario a cui il posto appartiene.

name: il nome del posto (esempio: Colosseo, Duomo di Milano, ecc.).

day: il giorno dell'itinerario in cui il posto è da visitare.

timeSlot: la fascia oraria (morning, afternoon, evening) in cui il posto è previsto.

latitude e longitude: le coordinate geografiche del posto.

address: l'indirizzo del posto.

photoReference: un riferimento per ottenere la foto del posto da Google Maps.

3. Visualizzazione dell'Itinerario
Quando un utente seleziona un itinerario dal frontend, vengono recuperati i dati dal backend.

Risposta dal backend: Il backend restituisce un oggetto che contiene i dettagli dell'itinerario (city, accommodation, startDate, endDate, ecc.) e una lista di tutti i posti associati all'itinerario.

Divisione per giorno e fascia oraria: I posti vengono divisi per giorno e per fascia oraria (morning, afternoon, evening), così che l'utente possa vedere facilmente quando visitare ciascun posto durante la vacanza.

4. Aggiunta del Posto "Alloggio"
Ogni giorno dell'itinerario include un posto speciale chiamato "Torna all'alloggio" che rappresenta l'ultimo posto da visitare per ogni giornata.

Posizionamento dell'alloggio: L'alloggio viene inserito come tappa finale del giorno (tipicamente alla sera) per garantire che l'utente abbia un punto di riferimento per tornare.

Dati dell'alloggio: L’alloggio viene salvato nella tabella places come una tappa speciale.

5. Gestione dei Conflitti nelle Date
Quando un utente tenta di creare un nuovo itinerario con date che potrebbero entrare in conflitto con itinerari esistenti (per lo stesso utente), viene effettuato un controllo tramite un'API di backend che verifica se le date sono già occupate.

Controllo di conflitto: Se vengono rilevati conflitti di date, l'utente viene avvisato e può decidere di modificare le date o scegliere un altro periodo.

6. Salvataggio e Aggiornamento dell'Itinerario
Una volta che l'utente ha confermato i dettagli dell'itinerario, questi vengono salvati nel database tramite il backend.

Aggiornamento di itinerari esistenti: L'utente può anche aggiornare un itinerario esistente (modificando la città, le date, o aggiungendo o rimuovendo posti) utilizzando un’API che aggiorna i record corrispondenti nel database.

7. Funzionamento della Mappa
Visualizzazione in mappa: Quando un utente accede alla mappa, vengono visualizzati tutti i posti dell'itinerario come marker sulla mappa, divisi per giorno e fascia oraria.

Dettagli dei posti: Ogni marker mostra il nome del posto e l'ora in cui è previsto.

Calcolo delle distanze: Viene calcolata la distanza tra i vari posti per ottimizzare i percorsi.

8. Funzione di Cancellazione
Gli utenti possono eliminare un itinerario o uno specifico posto tramite il backend.

Eliminazione dell'itinerario: Se un utente elimina un itinerario, tutti i posti associati vengono automaticamente rimossi dal database.

